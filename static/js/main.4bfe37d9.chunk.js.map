{"version":3,"sources":["Components/NavBar.js","helper/APIUrls.js","actions/ProductsAction.js","actions/ActionTypes.js","Components/EditableProduct.js","Components/Options.js","Components/ProductView.js","Components/Product.js","Components/Products.js","Components/Add_Products.js","Components/Cart_item.js","Components/Cart.js","Components/ProductPage.js","Components/App.js","reducers/ProductsReducer.js","reducers/index.js","config/configStore.js","index.js"],"names":["NavBar","className","to","src","alt","this","props","cartQty","React","Component","connect","state","products","cart","qty","add_products","delete_products","add_cart_products","APIUrls","delete_cart_products","update_quantity","get_products","DELETE_PRODUCT","product","dispatch","a","options","method","mode","headers","body","JSON","stringify","fetch","id","then","response","json","deleteProduct","console","log","UPDATE_PRODUCT","rating","updateProduct","DELETE_CART_PRODUCT","product_id","deleteCartProduct","e","UPDATE_QTY","val","cart_item","Nochange","type","ADD_CART_PRODUCT","getState","findIndex","item","totalCost","product_price","status","addProductCart","RESET","PLACE_ORDER","message","addProduct","EditableProduct","saveHandler","product_name","nameRef","current","value","priceRef","ratingRef","product_description","descriptionRef","avatar","resetHandler","createRef","ref","defaultValue","onClick","Options","handler","bind","stopPropagation","preventDefault","style","ProductView","editHandler","deleteHandler","addToCart","hideAddToCart","hideEditOptions","Rating","Product","setState","edit","hideOptions","params","pathname","stars","innerSpanWidth","width","Products","sortHandler","reset","map","index","key","Add_Products","ADD_PRODUCT","target","onSubmit","for","placeholder","min","max","rows","Cart_item","changeHandler","increment","decrement","height","margin","Cart","checkout","cost","withRouter","location","App","path","exact","flash","text","Noty","layout","show","initState","ProductsReducer","action","Object","assign","push","filter","i","splice","sort","b","root","combineReducers","persistReducer","storage","whitelist","configStore","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bfe37d9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    Link,\r\n} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n/**\r\n * Navigate to respective routes\r\n */\r\nclass NavBar extends React.Component{\r\n   \r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div className=\"NavBar\">\r\n                <div className=\"left\">\r\n                <Link to =\"/ecom-react/Products\" ><div className=\"nav-link\"> Products</div></Link>\r\n                <Link to=\"/ecom-react/Add-Product\"><div className=\"nav-link\">Add product</div></Link>\r\n                </div>\r\n                <div className=\"right\">\r\n                <Link to=\"/ecom-react/cart\"><div className=\"nav-link\"><img src=\"https://image.flaticon.com/icons/svg/3225/3225200.svg\" alt=\"Cart\"></img><sup>{this.props.cartQty}</sup></div></Link>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    \r\n    let cartQty=0;\r\n    for(let i of state.products.cart)\r\n        cartQty+=i.qty;\r\n    return {\r\n        cartQty\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar);","const github_id=\"nolifejustcode\";\r\nconst github_repo=\"db\"\r\nconst add_products=`https://my-json-server.typicode.com/${github_id}/${github_repo}/products`;\r\nconst delete_products=add_products\r\nconst add_cart_products=`https://my-json-server.typicode.com/${github_id}/${github_repo}/carts`\r\nconst delete_cart_products=add_cart_products\r\nconst update_quantity=add_cart_products\r\nconst get_products=add_products\r\nconst APIUrls={\r\n    add_products,\r\n    delete_products,\r\n    add_cart_products,\r\n    delete_cart_products,\r\n    update_quantity,\r\n    get_products\r\n}\r\n\r\nexport default APIUrls;","import{\r\nADD_PRODUCTS,\r\nDELETE_PRODUCTS,\r\nUPDATE_PRODUCTS,\r\nUPDATE_QUANTITY,\r\nDELETE_CART_PRODUCTS,\r\nADD_PRODUCT_CART,\r\nSORT_PRODUCTS,\r\nRESET_FILTER,\r\nCLEAR_CART,\r\nSET_PRODUCTS_LIST\r\n\r\n} from './ActionTypes'\r\nimport APIUrls from '../helper/APIUrls'\r\n/**\r\n * Adds product to the db \r\n * @param {*} product \r\n */\r\n function ADD_PRODUCT(product){\r\n       \r\n\r\n        return  async function(dispatch){\r\n            try{\r\n               \r\n                let options={\r\n                    method:'POST',\r\n                    mode:'cors',\r\n                    headers:{\r\n                        'content-type':'application/json'\r\n                    },\r\n                    body:JSON.stringify(product)\r\n                }\r\n                let response= await fetch(APIUrls.add_products,options)\r\n                if(response.status===201)\r\n                    {\r\n                        let json=await response.json();\r\n                        product=json\r\n                   \r\n                        dispatch(addProduct(json))\r\n                    }\r\n                \r\n            }catch(e){\r\n                console.log(e)\r\n            }\r\n            \r\n           \r\n        }\r\n    \r\n}\r\n/**\r\n * Deletes product from db\r\n * @param {*} product_id \r\n */\r\nfunction DELETE_PRODUCT(product){\r\n    return async function(dispatch){\r\n     \r\n            try{\r\n                let options={\r\n                    method:'DELETE',\r\n                    mode:\"cors\",\r\n                    headers:{\r\n                        'content-type':'application/json'\r\n                    },\r\n                    body:JSON.stringify(product)\r\n                }\r\n                let json=await fetch(APIUrls.delete_products+'/'+product.id,options).then(response=>response.json());\r\n               \r\n                dispatch(deleteProduct(product.id))\r\n            }catch(e){\r\n                    console.log(e);\r\n            }\r\n    }\r\n}\r\n/**\r\n * Update product details\r\n * @param {*} product \r\n */\r\nfunction UPDATE_PRODUCT(product){\r\n   return async function(dispatch){\r\n    \r\n            if(product.rating>5)\r\n                product.rating=5;\r\n            else if(product.rating<0)\r\n                product.rating=0;\r\n            try{\r\n                let options={\r\n                    method:'PUT',\r\n                    mode:\"cors\",\r\n                    headers:{\r\n                        'content-type':'application/json'\r\n                    },\r\n                    body:JSON.stringify(product)\r\n                }\r\n                let json=await fetch(APIUrls.add_products+'/'+product.id,options).then(response=>{\r\n                  //  console.log(response)\r\n                   return response.json()\r\n                });\r\n                \r\n                dispatch(updateProduct(json))\r\n            }catch(e){\r\n                    console.log(e);\r\n            }\r\n    }\r\n}\r\n/**\r\n * remove product from cart\r\n * @param {*} product_id \r\n */\r\nfunction DELETE_CART_PRODUCT(product_id){\r\n    return async function(dispatch){\r\n   \r\n            try{\r\n                 /**\r\n                 * uncomment for adding to cart db\r\n                 */\r\n                // let options={\r\n                //     method:'POST',\r\n                //     mode:\"cors\",\r\n                //     headers:{\r\n                //         'content-type':'application/json'\r\n                //     },\r\n                //     body:JSON.stringify(product_id)\r\n                // }\r\n                // let json=await fetch(APIUrls.delete_cart_products,options).then(response=>response.json());\r\n                // console.log(\"deleting cart\",json)\r\n                dispatch(deleteCartProduct(product_id))\r\n            }catch(e){\r\n                    console.log(e);\r\n            }\r\n    }    \r\n}\r\n/**\r\n * update product quantity\r\n * @param {*} val \r\n * @param {*} cart_item \r\n */\r\nfunction UPDATE_QTY(val,cart_item){\r\n    \r\n    return async function(dispatch){\r\n        if(cart_item.qty+val>=1){\r\n            cart_item.qty+=val;\r\n        }\r\n        else{\r\n            dispatch(Nochange())\r\n            return;\r\n        }\r\n        \r\n            try{\r\n                /**\r\n                 * uncomment for adding to cart db\r\n                 */\r\n                // let options={\r\n                //     method:'POST',\r\n                //     mode:\"cors\",\r\n                //     headers:{\r\n                //         'content-type':'application/json'\r\n                //     },\r\n                //     body:JSON.stringify(cart_item)\r\n                // }\r\n                // let json=await fetch(APIUrls.update_quantity,options).then(response=>response.json());\r\n                // console.log(json)\r\n                dispatch(updateQty(cart_item))\r\n            }catch(e){\r\n                    console.log(e);\r\n            }\r\n    }  \r\n}\r\n/**\r\n * Add product to cart\r\n * @param {*} product \r\n */\r\n\r\nfunction ADD_CART_PRODUCT(product){\r\n    \r\n    \r\n    return  async function(dispatch,getState){\r\n       let state=getState()\r\n        try{\r\n            if(state.products.cart.findIndex((item)=>{\r\n                return item.product.id===product.id\r\n            })!==-1)\r\n                {\r\n                        dispatch(Nochange())\r\n                        return;\r\n                }\r\n            let cart={\r\n                product,\r\n                qty:1,\r\n                totalCost:product.product_price\r\n            }\r\n            let options={\r\n                method:'POST',\r\n                mode:'cors',\r\n                headers:{\r\n                    'content-type':'application/json'\r\n                },\r\n                body:JSON.stringify(cart)\r\n            }\r\n            let response= await fetch(APIUrls.add_cart_products,options)\r\n          //  console.log(response)\r\n            if(response.status===201)\r\n                {\r\n                    let json=await response.json();\r\n                    product=json\r\n                    \r\n                    dispatch(addProductCart(json))\r\n                }\r\n            else{\r\n                dispatch(Nochange())\r\n            }\r\n            \r\n            \r\n            \r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n}\r\n/**\r\n * Reset filter of sorting\r\n * \r\n */\r\nfunction RESET(){\r\n    return async (dispatch)=>{\r\n        let json=await fetch(APIUrls.get_products)\r\n                 .then((response)=>response.json())\r\n      \r\n        dispatch(reset(json))\r\n    }\r\n}\r\n/**\r\n * sort the products based on price\r\n */\r\nfunction SORT(){\r\n    return {\r\n        type:SORT_PRODUCTS\r\n\r\n    }\r\n}\r\n/**\r\n * checkout and clear cart\r\n */\r\nfunction PLACE_ORDER(){\r\n    return async (dispatch)=>{\r\n    \r\n       let json={\r\n           status:201\r\n       }\r\n       if(json.status===201)\r\n        return dispatch(order())\r\n       return Nochange(\"Order cannot be placed\")\r\n        \r\n    }\r\n}\r\n\r\n/**\r\n * reset for reducer\r\n * @param {} products \r\n */\r\nfunction reset(products){\r\n    return{\r\n        type:RESET_FILTER,\r\n        products\r\n    }\r\n}\r\n/**\r\n * update qty\r\n * @param {*} cart \r\n */\r\nfunction updateQty(cart){\r\n    return{\r\n        type:UPDATE_QUANTITY,\r\n        cart\r\n    }\r\n}\r\n/**\r\n * instruct reducer to add product to the views\r\n * @param {*} product \r\n */\r\nfunction addProduct(product){\r\n    let message=\"Product Added\"\r\n    return{\r\n        type:ADD_PRODUCTS,\r\n        product,\r\n        message\r\n    }\r\n}\r\n/**\r\n * remove product form view\r\n * @param {} id \r\n */\r\nfunction deleteProduct(id){\r\n    let message=\"Product deleted \"\r\n    return{\r\n        type:DELETE_PRODUCTS,\r\n        id,\r\n        message\r\n    }\r\n}\r\n/**\r\n * update product locally\r\n * @param {*} product \r\n */\r\nfunction updateProduct(product){\r\n    let message=\"product updated\"\r\n    return{\r\n        type:UPDATE_PRODUCTS,\r\n        product,\r\n        message\r\n    }\r\n}\r\n/**\r\n * delete product from cart \r\n * @param {*} id \r\n */\r\nfunction deleteCartProduct(id){\r\n    let message=\"product removed from cart\"\r\n    return{\r\n        type:DELETE_CART_PRODUCTS,\r\n        id,\r\n        message\r\n    }\r\n}\r\n/**\r\n * add product to cart\r\n * @param {*} cart \r\n */\r\nfunction addProductCart(cart){\r\n    let message=\"Added to cart \"\r\n    return {\r\n        type:ADD_PRODUCT_CART,\r\n        cart,\r\n        message\r\n    }\r\n}\r\n/**\r\n * place order \r\n */\r\nfunction order(){\r\n    return{\r\n        type:CLEAR_CART,\r\n        message:\"Order placed Successfully\"\r\n    }\r\n}\r\n/**\r\n * instruct with no change of state\r\n * @param {*} message \r\n */\r\nfunction Nochange(message){\r\n    return{\r\n        type:\"DEFAULT\",\r\n        message\r\n    }\r\n}\r\n\r\n/**\r\n * set products from server\r\n */\r\n\r\n function setProducts(products){\r\n     \r\n     return{\r\n        type:SET_PRODUCTS_LIST,\r\n        products\r\n     }\r\n }\r\nexport{\r\n    ADD_PRODUCT,\r\n    DELETE_PRODUCT,\r\n    UPDATE_PRODUCT,\r\n    UPDATE_QTY,\r\n    DELETE_CART_PRODUCT,\r\n    ADD_CART_PRODUCT,\r\n    SORT,\r\n    RESET,\r\n    PLACE_ORDER,\r\n    setProducts\r\n}","const ADD_PRODUCTS=\"ADD_PRODUCTS\";\r\nconst DELETE_PRODUCTS=\"DELETE_PRODUCTS\"\r\nconst UPDATE_PRODUCTS=\"UPDATE_PRODUCTS\"\r\nconst UPDATE_QUANTITY=\"UPDATE_QUANTITY\"\r\nconst DELETE_CART_PRODUCTS=\"DELETE_CART_PRODUCTS\"\r\nconst ADD_PRODUCT_CART=\"ADD_PRODUCT_CART\"\r\nconst SORT_PRODUCTS=\"SORT_PRODUCTS\"\r\nconst RESET_FILTER=\"RESET_FILTER\"\r\nconst CLEAR_CART='CLEAR_CART'\r\nconst NO_CHANGE='NO_CHANGE'\r\nconst SET_PRODUCTS_LIST=\"SET_PRODUCTS_LIST\"\r\nexport{\r\n    ADD_PRODUCTS,\r\n    DELETE_PRODUCTS,\r\n    UPDATE_PRODUCTS,\r\n    UPDATE_QUANTITY,\r\n    DELETE_CART_PRODUCTS,\r\n    ADD_PRODUCT_CART,\r\n    SORT_PRODUCTS,\r\n    RESET_FILTER,\r\n    CLEAR_CART,\r\n    NO_CHANGE,\r\n    SET_PRODUCTS_LIST\r\n}","import React,{createRef} from 'react';\r\n\r\n\r\nclass EditableProduct extends React.Component{\r\n            constructor(props){\r\n                super(props);\r\n                this.nameRef=createRef();\r\n                this.priceRef=createRef();\r\n                this.ratingRef=createRef();\r\n                this.descriptionRef=createRef();\r\n            }\r\n            //save change to products after editing\r\n            saveHandler=(e)=>{\r\n                let product={\r\n                    id:this.props.product.id,\r\n                    product_name:this.nameRef.current.value,\r\n                    product_price:this.priceRef.current.value,\r\n                    rating:this.ratingRef.current.value,\r\n                    product_description:this.descriptionRef.current.value,\r\n                    avatar:this.props.product.avatar\r\n                }\r\n                this.props.saveHandler(product);\r\n            }\r\n            //cancel edit\r\n            resetHandler=(e)=>{\r\n                this.props.resetHandler(e);\r\n            }\r\n    render(){\r\n        \r\n        const {avatar,rating,product_description,product_name,product_price}=this.props.product;\r\n        return(\r\n            <div className=\"product-container\">\r\n                       \r\n                        <div className=\"left\">\r\n                            <div className=\"avatar\" >\r\n                                <img src={avatar} alt=\"avatar\"/>\r\n                            </div>\r\n                            <div className=\"product-details\">\r\n                                <div className=\"top\">\r\n                                        \r\n                                        <div className=\"product-name\"><input type=\"text\"  ref={this.nameRef} defaultValue={product_name}></input></div>\r\n                                        <div className=\"product-price\"><input type=\"Number\" ref={this.priceRef} defaultValue={product_price}/></div>\r\n                                        \r\n                                </div>\r\n                                <div className=\"bottom\">\r\n                                            <input type=\"number\"  defaultValue={rating} ref={this.ratingRef} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right\">\r\n\r\n                            <div className=\"description\">\r\n                                <textarea ref={this.descriptionRef} defaultValue={product_description} />\r\n                            </div>\r\n                          <div className=\"options\">\r\n                                <div className=\"icon\" onClick={this.saveHandler}><img src=\"https://image.flaticon.com/icons/svg/907/907027.svg\" alt=\"save\"/></div>\r\n                                <div className=\"icon\" onClick={this.resetHandler}><img src=\"https://image.flaticon.com/icons/svg/2919/2919590.svg\" alt=\"cancel\"/></div>\r\n                            </div>\r\n                        </div>\r\n                \r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default EditableProduct;","import React from 'react';\r\n/**\r\n * Options component with a button and event handler\r\n */\r\nclass Options extends React.Component{\r\n    //https://image.flaticon.com/icons/svg/715/715750.svg\r\n    constructor(props){\r\n        super(props)\r\n        this.handler=this.handler.bind(this);\r\n    }\r\n    handler(e){\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if(this.props.handler)\r\n            this.props.handler(e);\r\n    }\r\n    render(){\r\n        const {src,alt}=this.props;\r\n        return(\r\n            <div className=\"icon\" onClick={this.handler}><img src={src} alt={alt} style={this.props.style}/></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Options;","import React from 'react';\r\nimport Options from './Options'\r\nimport {Rating} from './Product'\r\nimport{ADD_CART_PRODUCT} from '../actions/ProductsAction'\r\n\r\nclass ProductView extends React.Component{\r\n            //edit product\r\n            editHandler=(e)=>{\r\n                this.props.editHandler(e);\r\n            }\r\n            //delete product\r\n            deleteHandler=(e)=>{\r\n                this.props.deleteHandler(this.props.product.id);\r\n            }\r\n            //add product to cart\r\n            addToCart=(e)=>{\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    this.props.dispatch(ADD_CART_PRODUCT(this.props.product))\r\n            }\r\n    render(){\r\n        const {avatar,rating,product_description,product_name,product_price}=this.props.product;\r\n        const{hideAddToCart,hideEditOptions}=this.props\r\n        //hide Add to cart button and hide all optins button\r\n        return(\r\n            <div className=\"product-container\">\r\n                       \r\n            <div className=\"left\">\r\n                <div className=\"avatar\" >\r\n                    <img src={avatar} alt=\"avatar\"/>\r\n                </div>\r\n                <div className=\"product-details\">\r\n                    <div className=\"top\">\r\n                            \r\n                            <div className=\"product-name\">{product_name}</div>\r\n                            <div className=\"product-price\">{product_price}</div>\r\n                            \r\n                    </div>\r\n                    <div className=\"bottom\">\r\n                                <Rating rating={rating} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"right\">\r\n\r\n                <div className=\"description\">\r\n                    {product_description}\r\n                </div>\r\n\r\n                <div className=\"options\">\r\n                    {!hideAddToCart&&<button onClick={this.addToCart} >Add To Cart</button>}\r\n                    {!hideEditOptions&&<Options handler={this.editHandler} src=\"https://image.flaticon.com/icons/svg/715/715750.svg\" alt=\"edit\"/>}\r\n                    {!hideEditOptions&&<Options handler={this.deleteHandler} src=\"https://image.flaticon.com/icons/svg/1214/1214428.svg\" alt=\"delete\"/>}\r\n                    \r\n                </div>\r\n            </div>\r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductView;","import React from 'react';\r\n\r\nimport EditableProduct from './EditableProduct'\r\nimport ProductView from './ProductView'\r\nimport { Link } from 'react-router-dom';\r\nclass Product extends React.Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state={\r\n                edit:false,\r\n                hideOptions:false,\r\n            }\r\n          // console.log(\"products\",props)\r\n        }\r\n        editHandler=(e)=>{\r\n                this.setState((state)=>{\r\n                    return {\r\n                        edit:true\r\n                    }\r\n                })\r\n        }\r\n        deleteHandler=(id)=>{\r\n                if(this.props.deleteHandler)\r\n                    {\r\n                        this.props.deleteHandler(id);\r\n                    }\r\n        }\r\n\r\n        saveHandler=(product)=>{\r\n           \r\n               // console.log(\"save\",product)\r\n                if(this.props.saveHandler)\r\n                    {\r\n                        this.props.saveHandler(product);\r\n                    }\r\n                this.resetHandler()\r\n        }\r\n\r\n        resetHandler=()=>{\r\n                this.setState((state)=>{\r\n                    return {\r\n                        edit:false,\r\n                    }\r\n                })\r\n        }\r\n\r\n        render(){\r\n            const params={\r\n                    editHandler:this.editHandler,\r\n                    deleteHandler:this.deleteHandler,\r\n                    saveHandler:this.saveHandler,\r\n                    resetHandler:this.resetHandler,\r\n                    product:this.props.product,\r\n                    dispatch:this.props.dispatch,\r\n                    hideAddToCart:this.props.hideAddToCart,\r\n                    hideEditOptions:this.props.hideEditOptions\r\n            }\r\n            return(\r\n                 \r\n                 <div className=\"products-display\">\r\n                     \r\n                { !this.state.edit&&\r\n                 <Link to={\r\n                     {\r\n                         pathname:\"/ecom-react/Product\",\r\n                         state:{\r\n                             product:params.product,\r\n                             \r\n                         }\r\n                            \r\n                             \r\n                         \r\n                     }\r\n                     }  >\r\n                 <ProductView {...params } />\r\n                 </Link>\r\n                 }\r\n                {this.state.edit && <EditableProduct {...params}/>}\r\n                \r\n                </div>\r\n            )\r\n            \r\n        }\r\n}\r\nfunction Rating(props){\r\n    let stars=props.rating;\r\n    if(stars>5)\r\n        stars=5;\r\n    else if(stars<0)\r\n        stars=0;\r\n    let innerSpanWidth=stars*16+\"px\";\r\n   \r\n    return(\r\n\r\n        <span className=\"stars\">\r\n            <span style={{width:innerSpanWidth}}></span>\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\nexport{\r\n     Product,\r\n     Rating\r\n}\r\n","import React from 'react';\r\nimport { DELETE_PRODUCT ,UPDATE_PRODUCT,SORT,RESET} from '../actions/ProductsAction';\r\nimport { connect } from 'react-redux';\r\nimport { Product } from './Product';\r\n\r\nclass Products extends React.Component{\r\n    \r\n\r\n    deleteHandler=(id)=>{\r\n            this.props.dispatch(DELETE_PRODUCT({id}));\r\n    }\r\n\r\n    saveHandler=(product)=>{\r\n            this.props.dispatch(UPDATE_PRODUCT(product))\r\n    }\r\n    sortHandler=()=>{\r\n        \r\n       this.props.dispatch(SORT())\r\n    }\r\n    reset=()=>{\r\n        this.props.dispatch(RESET())\r\n    }\r\n    render(){\r\n        \r\n        const {products}=this.props.products\r\n        return(\r\n            <div >\r\n            <div className=\"product-filters\">\r\n                <div className=\"filter\">\r\n                        <button onClick={this.sortHandler}>sort</button>\r\n                        <button onClick={this.reset}>X</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"productsList\">\r\n                    {\r\n                        products.map(\r\n                            (item,index)=>{\r\n                               return  <Product product={item} deleteHandler={this.deleteHandler} saveHandler={this.saveHandler} dispatch={this.props.dispatch} key={index}/>\r\n                            }\r\n                        )\r\n                    }\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        products:state.products,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Products);","import  { createRef } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport React from 'react'\r\nimport {ADD_PRODUCT} from '../actions/ProductsAction'\r\nclass Add_Products extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.nameRef=createRef();\r\n        this.priceRef=createRef();\r\n        this.ratingRef=createRef();\r\n        this.descriptionRef=createRef();\r\n        \r\n    }\r\n    // add product to db\r\n    addProduct=(e)=>{\r\n        e.preventDefault();\r\n   \r\n        let product={\r\n                \r\n                product_name:this.nameRef.current.value,\r\n                product_price:this.priceRef.current.value,\r\n                rating:this.ratingRef.current.value,\r\n                product_description:this.descriptionRef.current.value,\r\n        }\r\n     \r\n        if(product.product_name===''||product.product_description===''||product.product_price<0||product.rating<0||product.rating>5)\r\n            {\r\n                console.log('Invalid data formats')\r\n                return;\r\n            }\r\n        \r\n        this.props.dispatch(ADD_PRODUCT(product))\r\n        e.target.reset()\r\n    }\r\n    render(){\r\n        \r\n        return (\r\n\r\n            \r\n            \r\n                <form onSubmit={this.addProduct} className=\"Add-product-container\">\r\n                <div className=\"Input-element\">\r\n                \r\n                \r\n                <label for=\"name\">Name</label>\r\n                <input type=\"text\" ref={this.nameRef} id=\"name\" placeholder=\"\" />\r\n                </div>\r\n                <div className=\"Input-element\">\r\n                <label for=\"price\">Price</label>\r\n                <input type=\"Number\" ref={this.priceRef} id=\"price\" min=\"0\"/>\r\n                </div>    \r\n                <div className=\"Input-element\">\r\n                <label for=\"rating\">Rating</label>\r\n                <input type=\"Number\" max=\"5\" min=\"0\" ref={this.ratingRef} id=\"rating\"/>\r\n                </div>\r\n                <div className=\"Input-element\">\r\n                <label for=\"description\">Description</label>\r\n                <textarea ref={this.descriptionRef} rows=\"2\" id=\"description\"/>\r\n                </div>\r\n                <input type=\"submit\" value=\"Add Product\"  id=\"add\"  />\r\n                </form  >\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        ...state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Add_Products);","import React from 'react';\r\nimport { Product } from './Product';\r\n\r\nimport Options from './Options';\r\nimport {UPDATE_QTY,DELETE_CART_PRODUCT,UPDATE_PRODUCT} from '../actions/ProductsAction'\r\nclass Cart_item extends React.Component{\r\n    /**\r\n     * handle qty change\r\n     */\r\n    changeHandler=(e)=>{\r\n            if(e.target.value<0)\r\n                e.target.value=0;\r\n            this.props.dispatch(UPDATE_QTY(e.target.value,this.props.cart))\r\n    }\r\n    // increment qty\r\n    increment=(e)=>{\r\n        this.props.dispatch(UPDATE_QTY(1,this.props.cart))\r\n    }\r\n    //decrement qty\r\n    decrement=(e)=>{\r\n        \r\n        this.props.dispatch(UPDATE_QTY(-1,this.props.cart));\r\n    }\r\n    //delete itsm\r\n    deleteHandler=(e)=>{\r\n        this.props.dispatch(DELETE_CART_PRODUCT(this.props.cart.id))\r\n    }\r\n    //make product changes\r\n    saveHandler=(product)=>{\r\n        this.props.dispatch(UPDATE_PRODUCT(product))\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"cart_item\">\r\n                    <Product product={this.props.cart.product}  hideAddToCart={true} deleteHandler={this.deleteHandler} saveHandler={this.saveHandler}/>\r\n                    <div className=\"qty-container\">\r\n                    \r\n                    <div className=\"options vertical\">\r\n                    <Options handler={this.increment} src={\"https://image.flaticon.com/icons/svg/1237/1237946.svg\"} alt={\"increment\"} style={{height:1+'em'}}></Options>\r\n                    <div className=\"qty\">{this.props.cart.qty}</div>\r\n                    <Options handler={this.decrement} src={\"https://image.flaticon.com/icons/svg/1828/1828901.svg\"} alt={\"decrement\"} style={{height:1+'em'}}></Options>\r\n                   \r\n                    </div>\r\n                    <div style={{margin :'5px' }}>\r\n                        Total Cost  : {this.props.cart.qty*this.props.cart.product.product_price}\r\n                    </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Cart_item;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Cart_item from './Cart_item';\r\nimport {PLACE_ORDER} from '../actions/ProductsAction'\r\nclass Cart extends React.Component{\r\n   \r\n// checkout for placing order\r\n\r\ncheckout=()=>{\r\n        this.props.dispatch(PLACE_ORDER())\r\n}\r\n    render(){\r\n       \r\n        const {cart}=this.props;\r\n        let cost=0;\r\n        return(\r\n            <div className=\"cart-container\">\r\n                <div className=\"product-list\">\r\n                    {\r\n                            cart.map(\r\n                                (item,index)=>{\r\n                                    \r\n                                    cost+=item.qty*item.product.product_price;\r\n                                    return <Cart_item  cart={item} dispatch={this.props.dispatch} key={index}/>\r\n                                }\r\n                            )\r\n                    }\r\n                </div>\r\n                <div className=\"total\">\r\n                        Total Cost :{cost}\r\n                        <button className=\"checkout\" onClick={this.checkout}>\r\n                            checkout\r\n                        </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>\r\n{  \r\n    return {\r\n        cart:state.products.cart,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Cart);","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {connect } from 'react-redux'\r\nimport {Rating} from './Product'\r\nimport {ADD_CART_PRODUCT} from '../actions/ProductsAction'\r\n/**\r\n * Products page showing details of products\r\n * @param {*} props \r\n */\r\nfunction ProductPage(props){\r\n    \r\n    const {product}=props.location.state\r\n     function addToCart(e){\r\n        e.stopPropagation();\r\n        props.dispatch(ADD_CART_PRODUCT(product))\r\n    }\r\n    return (\r\n        \r\n        <div className=\"product\">\r\n            <div className=\"product-name \">\r\n                        {product.product_name}\r\n                </div>\r\n            <div className=\"details\">\r\n            <div className=\"left\">\r\n                    <img className=\"avatar\" src={product.avatar} alt=\"avatar\"></img>\r\n            </div>\r\n            <div className=\"right\">\r\n                \r\n                <h3 className=\"heading\">Price</h3>\r\n                <div className=\"product-price margin-left-20\">\r\n                    \r\n                        {product.product_price}\r\n                </div>\r\n                <h3>Rating</h3>\r\n                <div className=\"product-rating margin-left-20\">\r\n                    <Rating rating={product.rating}/>\r\n                </div>\r\n                <h3 className='heading'>Description</h3>\r\n                <div className=\"product-description margin-left-20\">\r\n                        {product.product_description}\r\n                </div>\r\n                <button onClick={addToCart} className=\"addtocart\" >Add To Cart</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n// to extract dispatch\r\nfunction mapStateToProps (state){\r\n    return {}\r\n}\r\nexport default withRouter( connect(mapStateToProps)(ProductPage));","import React from 'react';\nimport NavBar from './NavBar'\nimport {\n  BrowserRouter as Router,\n  \n  Route,\n  Switch,\n} from 'react-router-dom';\nimport Products from './Products';\nimport Add_Products from './Add_Products';\nimport Cart from './Cart';\nimport APIUrls from '../helper/APIUrls';\nimport { connect } from 'react-redux';\nimport {setProducts} from '../actions/ProductsAction'\nimport ProductPage from './ProductPage';\n/**\n * Create Router and display views according to routes\n */\nclass App extends React.Component{\n  componentDidMount(){\n    fetch(APIUrls.add_products)\n      .then(response=>response.json())\n      .then(json=>{\n        this.props.dispatch(setProducts(json));\n      })\n  }\n  render(){\n    \n    return(\n      \n      <div className=\"App\">\n        \n        <Router>\n            \n          <Switch>\n          <Route > \n              <NavBar/>\n            <Route  path=\"/ecom-react/Product\">\n              <ProductPage/>\n            </Route>  \n            <Route exact path=\"/ecom-react/Products\">\n            \n              <Products />\n\n            </Route>\n            <Route exact path=\"/ecom-react/Add-Product\">\n              <Add_Products></Add_Products>\n            </Route>\n            <Route exact path=\"/ecom-react/cart\">\n              <Cart></Cart>\n            </Route>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n      \n    )\n  }\n}\nfunction mapStateToProps(state){\n  return{\n\n  }\n}\nexport default connect(mapStateToProps)(App);\n","import { ADD_PRODUCTS, DELETE_PRODUCTS, UPDATE_PRODUCTS, UPDATE_QUANTITY, DELETE_CART_PRODUCTS, ADD_PRODUCT_CART,SORT_PRODUCTS, RESET_FILTER , CLEAR_CART,SET_PRODUCTS_LIST} from \"../actions/ActionTypes\";\r\nimport Noty from 'noty'\r\n// flast notification using noty\r\nfunction flash(text){\r\nlet n=new Noty({\r\n    text,\r\n    layout:'topRight',\r\n    type:'success'\r\n})\r\nn.show();\r\n}\r\n// initial state \r\nconst initState={\r\n   products:[\r\n       \r\n   ],\r\n   cart:[]\r\n}\r\nfunction ProductsReducer(state=initState,action){\r\n    // flast message for notification\r\n    if(action.message)\r\n        flash(action.message)\r\n    switch(action.type){\r\n        //set products\r\n        case SET_PRODUCTS_LIST:{\r\n            return{\r\n                ...state,\r\n                products:action.products\r\n            }\r\n        }\r\n        // Add products by pushing to end filter is ignored\r\n        case ADD_PRODUCTS:{\r\n            let products=[];\r\n            Object.assign(products,state.products);\r\n            products.push(action.product);\r\n            \r\n            return {\r\n                ...state,\r\n                products\r\n            }\r\n\r\n        }\r\n       \r\n            // delete from list of products\r\n        case DELETE_PRODUCTS:{\r\n            \r\n            let products=state.products.filter(\r\n                (item)=>{\r\n                    return !(item.id===action.id)\r\n                }\r\n            );\r\n            return {\r\n                ...state,\r\n                products\r\n            }\r\n        }\r\n        // update products\r\n        case UPDATE_PRODUCTS:{\r\n            let products=[]\r\n            let cart=[]\r\n            Object.assign(products,state.products);\r\n            Object.assign(cart,state.cart)\r\n            for(let i in products){\r\n                if(products[i].id===action.product.id)\r\n                    products[i]=action.product;\r\n            }\r\n            for(let i in cart){\r\n                if(action.product.id===cart[i].product.id)\r\n                    cart[i].product=action.product;\r\n            }\r\n            \r\n            return {\r\n                ...state,\r\n                products,\r\n                cart,\r\n            }\r\n        }\r\n        // update qty of product\r\n        case UPDATE_QUANTITY:{\r\n            let cart=[]\r\n            Object.assign(cart,state.cart)\r\n            for (let i in cart){\r\n                if(cart[i].id===action.cart.id){\r\n                    cart[i]=action.cart;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                cart\r\n            }\r\n        }\r\n            // delete from cart \r\n        case DELETE_CART_PRODUCTS:{\r\n            let cart=[]\r\n            let index=-1;\r\n            Object.assign(cart,state.cart);\r\n            index=cart.findIndex((item)=>item.id===action.id)\r\n           \r\n            cart.splice(index,1);\r\n            return {\r\n                ...state,\r\n                cart\r\n            }\r\n        }\r\n        // add to cart \r\n        case ADD_PRODUCT_CART:{\r\n            let cart=[];\r\n            Object.assign(cart,state.cart)\r\n            cart.push(action.cart)\r\n            \r\n            return{\r\n                ...state,\r\n                cart\r\n            }\r\n        }\r\n        // sort filter on the main list of products all updates and deletion are done on this\r\n\r\n        case SORT_PRODUCTS:{\r\n           \r\n            let products=[];\r\n            Object.assign(products,state.products);\r\n            products.sort((a,b)=>a.product_price-b.product_price);\r\n            return {\r\n                ...state,\r\n                products\r\n            }\r\n        }\r\n        // reset sorting\r\n        case RESET_FILTER:{\r\n            \r\n            return{\r\n                ...state,\r\n                products:action.products\r\n            }\r\n        }\r\n        // clear cart \r\n        case CLEAR_CART:{\r\n            return{\r\n                ...state,\r\n                cart:[]\r\n            }\r\n        }\r\n        \r\n        default:\r\n                return state;\r\n            \r\n    }\r\n    \r\n}\r\n\r\nexport default ProductsReducer;","import { combineReducers } from \"redux\";\r\nimport ProductsReducer from './ProductsReducer'\r\nimport {persistReducer} from 'redux-persist'\r\nimport storage from'redux-persist/lib/storage'\r\n//create persistance of cart item\r\nconst root=combineReducers({\r\n    products:persistReducer({\r\n        key:['products'],\r\n        storage,\r\n        whitelist:['cart']\r\n    },ProductsReducer)\r\n})\r\n\r\nexport default root;","import {createStore, applyMiddleware} from 'redux';\r\nimport root from '../reducers/index';\r\nimport thunk from 'redux-thunk';\r\nimport{persistStore} from'redux-persist'\r\n\r\n// configure store and make cart item persistant using redux-persist\r\n\r\nfunction configStore(){\r\n  \r\n    let store=createStore(\r\n        root,\r\n        applyMiddleware(thunk)\r\n      );\r\n    return {store,persistor:persistStore(store)}\r\n}\r\n\r\nexport default configStore;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/noty/lib/noty.css'\nimport '../node_modules/noty/lib/themes/mint.css'\nimport App from './Components/App';\nimport configStore from './config/configStore';\nimport { Provider } from 'react-redux';\n\nlet {store}=configStore();\nconsole.log(\"store\",store.getState())\nReactDOM.render(\n\n  <Provider store={store}>\n    {console.log(store.getState())}\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}